{"version":3,"sources":["components/Resizable/style.module.scss","components/Resizable/index.js","containers/Home/index.js"],"names":["module","exports","Resizable","props","handleScroll","e","console","log","srcElement","scrollingElement","scrollTop","scrollHeight","handleResize","arr","state","pageInfo","map","item","push","value","code","title","document","body","clientWidth","clientHeight","offsetWidth","offsetHeight","scrollWidth","documentElement","scrollLeft","window","screenTop","screenLeft","screen","height","width","availHeight","availWidth","colorDepth","deviceXDPI","className","Style","box","minConstraints","maxConstraints","axis","handle","resizableHandle","onClick","stopPropagation","this","children","text","Component","Home","axios","method","url","headers","Authorization","then","res"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,IAAM,mBAAmB,KAAO,oBAAoB,gBAAkB,iC,4JCoGzEC,EAjGf,kDACE,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAmDRC,aAAe,SAACC,GACdC,QAAQC,IACN,6CACAF,EAAEG,WAAWC,iBAAiBC,UAC9BL,EAAEG,WAAWC,iBAAiBE,eAxDf,EA8DnBC,aAAe,SAACP,GACd,IAAIQ,EAAM,GACV,EAAKC,MAAMC,SAASC,KAAI,SAACC,GAAD,OAAUJ,EAAIK,KAAK,CAAED,OAAME,MAAOF,EAAKG,WA7D/D,EAAKN,MAAQ,CACXC,SAAU,CACR,CAAEM,MAAO,oDAAaD,KAAME,SAASC,KAAKC,aAC1C,CAAEH,MAAO,oDAAaD,KAAME,SAASC,KAAKE,cAC1C,CACEJ,MAAO,kHACPD,KAAME,SAASC,KAAKG,aAEtB,CACEL,MAAO,0FACPD,KAAME,SAASC,KAAKI,cAEtB,CAAEN,MAAO,oDAAaD,KAAME,SAASC,KAAKK,aAC1C,CAAEP,MAAO,oDAAaD,KAAME,SAASC,KAAKZ,cAC1C,CAAEU,MAAO,wDAAiBD,KAAME,SAASC,KAAKb,WAC9C,CACEW,MAAO,wDACPD,KAAME,SAASO,gBAAgBnB,WAEjC,CAAEW,MAAO,oDAAaD,KAAME,SAASC,KAAKO,YAC1C,CAAET,MAAO,oDAAaD,KAAMW,OAAOC,WACnC,CAAEX,MAAO,oDAAaD,KAAMW,OAAOE,YACnC,CAAEZ,MAAO,oDAAaD,KAAMW,OAAOG,OAAOC,QAC1C,CAAEd,MAAO,oDAAaD,KAAMW,OAAOG,OAAOE,OAC1C,CAAEf,MAAO,gEAAeD,KAAMW,OAAOG,OAAOG,aAC5C,CAAEhB,MAAO,gEAAeD,KAAMW,OAAOG,OAAOI,YAC5C,CACEjB,MAAO,yEACPD,KAAMW,OAAOG,OAAOK,YAEtB,CACElB,MAAO,yEACPD,KAAMW,OAAOG,OAAOM,cAnCT,EADrB,kJAsEI,OACE,6BACE,kBAAC,eAAD,CACEC,UAAWC,IAAMC,IACjBP,MAAO,IACPD,OAAQb,SAASC,KAAKE,cAAgB,IACtCmB,eAAgB,CAAC,IAAKtB,SAASC,KAAKE,cACpCoB,eAAgB,CAAC,IAAKvB,SAASC,KAAKE,cACpCqB,KAAK,IACLC,OACE,0BACEN,UAAWC,IAAMM,gBACjBC,QAAS,SAAC5C,GACRA,EAAE6C,sBAKPC,KAAKhD,MAAMiD,UACV,0BAAMX,UAAWC,IAAMW,MAAvB,qCAzFZ,GAA+BC,a,kBCAlBC,EAAb,4MACEzC,MAAQ,GADV,kEAqBI0C,IAAM,CACJC,OAAQ,MACRC,IAAI,2DAEJC,QAAS,CACPC,cAAe,8CAEhBC,MAAK,SAAUC,GAChBxD,QAAQC,IAAIuD,QA7BlB,+BAqCI,OACE,oCACE,kBAAC,EAAD,KACE,4BACE,qDACA,qDACA,qDACA,qDACA,qDACA,4DA9CZ,GAA0BR,aAsDXC","file":"static/js/Home.1f2ae180.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"style_box__2aWeU\",\"text\":\"style_text__3ahzk\",\"resizableHandle\":\"style_resizableHandle__3siPQ\"};","import React, { Component } from \"react\";\nimport { ResizableBox } from \"react-resizable\";\nimport Style from \"./style.module.scss\";\n\nexport class Resizable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pageInfo: [\n        { title: \" 网页可见区域宽：\", code: document.body.clientWidth },\n        { title: \" 网页可见区域高：\", code: document.body.clientHeight },\n        {\n          title: \" 网页可见区域宽(包括边线和滚动条的宽)：\",\n          code: document.body.offsetWidth,\n        },\n        {\n          title: \" 网页可见区域高(包括边线的宽)：\",\n          code: document.body.offsetHeight,\n        },\n        { title: \" 网页正文全文宽：\", code: document.body.scrollWidth },\n        { title: \" 网页正文全文高：\", code: document.body.scrollHeight },\n        { title: \" 网页被卷去的高(ff)：\", code: document.body.scrollTop },\n        {\n          title: \" 网页被卷去的高(ie)：\",\n          code: document.documentElement.scrollTop,\n        },\n        { title: \" 网页被卷去的左：\", code: document.body.scrollLeft },\n        { title: \" 网页正文部分上：\", code: window.screenTop },\n        { title: \" 网页正文部分左：\", code: window.screenLeft },\n        { title: \" 屏幕分辨率的高：\", code: window.screen.height },\n        { title: \" 屏幕分辨率的宽：\", code: window.screen.width },\n        { title: \" 屏幕可用工作区高度：\", code: window.screen.availHeight },\n        { title: \" 屏幕可用工作区宽度：\", code: window.screen.availWidth },\n        {\n          title: \" 你的屏幕设置是(位彩色)： \",\n          code: window.screen.colorDepth,\n        },\n        {\n          title: \" 你的屏幕设置(像素/英寸)：\",\n          code: window.screen.deviceXDPI,\n        },\n      ],\n    };\n  }\n\n  componentDidMount() {\n    // window.addEventListener(\"scroll\", this.handleScroll.bind(this)); //监听滚动\n    // window.addEventListener(\"resize\", this.handleResize.bind(this)); //监听窗口大小改变\n  }\n\n  componentWillUnmount() {\n    //一定要最后移除监听器，以防多个组件之间导致this的指向紊乱\n    // window.removeEventListener(\"scroll\", this.handleScroll.bind(this));\n    // window.removeEventListener(\"resize\", this.handleResize.bind(this));\n  }\n\n  handleScroll = (e) => {\n    console.log(\n      \"浏览器滚动事件\",\n      e.srcElement.scrollingElement.scrollTop,\n      e.srcElement.scrollingElement.scrollHeight\n    );\n    //e.srcElement.scrollingElement.scrollTop为距离滚动条顶部高度\n    // e.srcElement.scrollingElement.scrollHeight为整个文档高度\n  };\n\n  handleResize = (e) => {\n    let arr = [];\n    this.state.pageInfo.map((item) => arr.push({ item, value: item.code }));\n    // console.log(arr);\n  };\n\n  render() {\n    return (\n      <div>\n        <ResizableBox\n          className={Style.box}\n          width={200}\n          height={document.body.clientHeight || 300}\n          minConstraints={[100, document.body.clientHeight]}\n          maxConstraints={[300, document.body.clientHeight]}\n          axis=\"x\"\n          handle={\n            <span\n              className={Style.resizableHandle}\n              onClick={(e) => {\n                e.stopPropagation();\n              }}\n            />\n          }\n        >\n          {this.props.children || (\n            <span className={Style.text}>Only resizable by \"x\" axis.</span>\n          )}\n        </ResizableBox>\n      </div>\n    );\n  }\n}\n\nexport default Resizable;\n","import React, { Component } from \"react\";\nimport Resizable from \"Components/Resizable\";\nimport axios from \"axios\";\n\nexport class Home extends Component {\n  state = {};\n  componentDidMount() {\n    //通过Github API创建文件\n    // let params = {\n    //   message: \"my commit message\",\n    //   committer: {\n    //     name: \"lixudong\",\n    //     email: \"1228372022@qq.com\",\n    //   },\n    //   content: \"bXkgbmV3IGZpbGUgY29udGVudHM=\",\n    // };\n    // axios\n    //   .put(\n    //     \"https://api.github.com/repos/lxd0619/react_blog/contents/mmm.md?access_token=c2225ce2220f2bf9641d70025a1e78c7cd194e77\",\n    //     params\n    //   )\n    //   .then((res) => {\n    //     console.log(res);\n    //   });\n\n    axios({\n      method: \"get\",\n      url: `https://api.github.com/repos/lxd0619/react_blog/contents`,\n      // data: obj,\n      headers: {\n        Authorization: \"c2225ce2220f2bf9641d70025a1e78c7cd194e77\",\n      },\n    }).then(function (res) {\n      console.log(res);\n    });\n    // axios.get(\n    //   \"https://api.github.com/repos/lxd0619/react_blog/contents?access_token=c2225ce2220f2bf9641d70025a1e78c7cd194e77\"\n    // );\n  }\n\n  render() {\n    return (\n      <>\n        <Resizable>\n          <ul>\n            <li>aaaaaaaaaaaaaaaaaaaaa</li>\n            <li>aaaaaaaaaaaaaaaaaaaaa</li>\n            <li>aaaaaaaaaaaaaaaaaaaaa</li>\n            <li>aaaaaaaaaaaaaaaaaaaaa</li>\n            <li>aaaaaaaaaaaaaaaaaaaaa</li>\n            <li>aaaaaaaaaaaaaaaaaaaaa</li>\n          </ul>\n        </Resizable>\n      </>\n    );\n  }\n}\n\nexport default Home;\n"],"sourceRoot":""}