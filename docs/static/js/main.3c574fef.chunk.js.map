{"version":3,"sources":["containers/Front_end/test.md","containers/Home/index.js","utils/CodeBloack/index.js","utils/HeadingBlock/Heading.js","utils/HeadingBlock/index.js","containers/Front_end/index.js","containers/Back_end/index.js","containers/Main/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","state","this","Component","CodeBlock","SyntaxHighlighter","registerLanguage","jsx","javascript","props","language","value","className","style","coy","PureComponent","defaultProps","elements","h1","h2","h3","h4","h5","h6","Heading","level","children","React","createElement","type","HeadingBlock","renderHtml","length","nodeValue","id","href","FrontEnd","markdown","fetch","AppMarkdown","then","res","text","setState","bordered","source","escapeHtml","renderers","code","CodeBloack","heading","preview","onChange","backend","onClick","history","push","SubMenu","Menu","Header","Layout","Content","Sider","Footer","AppRouter","theme","mode","defaultSelectedKeys","Item","key","to","breakpoint","collapsedWidth","width","defaultOpenKeys","height","borderRight","icon","UserOutlined","title","LaptopOutlined","NotificationOutlined","padding","margin","minHeight","path","component","exact","Frontend","Backend","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3c574fef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/test.9f36d732.md\";","import React, { Component } from \"react\";\r\n\r\nimport {} from \"antd\";\r\n\r\nexport class Home extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    const {} = this.state;\r\n    return <div>Home</div>;\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { PrismLight as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\n// 设置高亮样式\r\nimport { coy } from \"react-syntax-highlighter/dist/esm/styles/prism\";\r\n// 设置高亮的语言\r\nimport {\r\n  jsx,\r\n  javascript,\r\n  sass,\r\n  scss,\r\n} from \"react-syntax-highlighter/dist/esm/languages/prism\";\r\n\r\nclass CodeBlock extends PureComponent {\r\n  static propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    language: PropTypes.string,\r\n  };\r\n\r\n  static defaultProps = {\r\n    language: null,\r\n  };\r\n\r\n  componentWillMount() {\r\n    // 注册要高亮的语法，\r\n    // 注意：如果不设置打包后供第三方使用是不起作用的\r\n    SyntaxHighlighter.registerLanguage(\"jsx\", jsx);\r\n    SyntaxHighlighter.registerLanguage(\"javascript\", javascript);\r\n  }\r\n\r\n  render() {\r\n    const { language, value } = this.props;\r\n    return (\r\n      <figure className=\"highlight\">\r\n        <SyntaxHighlighter language={language} style={coy}>\r\n          {value}\r\n        </SyntaxHighlighter>\r\n      </figure>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CodeBlock;\r\n","import React from \"react\";\r\n\r\nconst elements = {\r\n  h1: \"h1\",\r\n  h2: \"h2\",\r\n  h3: \"h3\",\r\n  h4: \"h4\",\r\n  h5: \"h5\",\r\n  h6: \"h6\",\r\n};\r\n\r\nfunction Heading({ level, children, ...props }) {\r\n  return React.createElement(elements[level] || elements.h1, props, children);\r\n}\r\n\r\nHeading.defaultProps = {\r\n  type: \"h1\",\r\n};\r\n\r\nexport default Heading;\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport cls from \"classnames\";\r\nimport Heading from \"./Heading\";\r\n\r\nclass HeadingBlock extends PureComponent {\r\n  renderHtml = () => {\r\n    const { level, children } = this.props;\r\n\r\n    if (children && children.length > 0) {\r\n      const nodeValue = children[0].props.value;\r\n      return (\r\n        <Heading level={`h${level}`} id={nodeValue}>\r\n          <span className=\"title\">{children}</span>\r\n          <a href={`#${nodeValue}`} className=\"link\">\r\n            #\r\n          </a>\r\n        </Heading>\r\n      );\r\n    } else {\r\n      return <>{children}</>;\r\n    }\r\n  };\r\n  render() {\r\n    return <>{this.renderHtml()}</>;\r\n  }\r\n}\r\n\r\nexport default HeadingBlock;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Card } from \"antd\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport CodeBloack from \"../../utils/CodeBloack\";\r\nimport HeadingBlock from \"../../utils/HeadingBlock\";\r\nimport AppMarkdown from \"./test.md\";\r\nimport Editor from \"for-editor\";\r\n\r\nexport class FrontEnd extends Component {\r\n  state = {\r\n    markdown: \"\",\r\n  };\r\n\r\n  componentWillMount() {\r\n    fetch(AppMarkdown)\r\n      .then((res) => res.text())\r\n      .then((text) => this.setState({ markdown: text }));\r\n  }\r\n\r\n  render() {\r\n    const { markdown, value } = this.state;\r\n    return (\r\n      <div>\r\n        <Card bordered={false}>\r\n          <ReactMarkdown\r\n            className=\"markdown-body\"\r\n            source={markdown}\r\n            escapeHtml={false}\r\n            renderers={{\r\n              code: CodeBloack,\r\n              heading: HeadingBlock,\r\n            }}\r\n          />\r\n        </Card>\r\n        <Editor\r\n          preview\r\n          value={value}\r\n          onChange={(value) => {\r\n            this.setState({ value });\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FrontEnd;\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"antd\";\r\n\r\nexport class backend extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>后端</div>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => {\r\n            this.props.history.push(\"/frontend\");\r\n          }}\r\n        >\r\n          go\r\n        </Button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default backend;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  HashRouter,\r\n  Route,\r\n  NavLink,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Home from \"../Home\";\r\nimport Frontend from \"../Front_end\";\r\nimport Backend from \"../Back_end\";\r\n\r\nimport { Layout, Menu, Breadcrumb } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  LaptopOutlined,\r\n  NotificationOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nclass AppRouter extends React.Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <Layout>\r\n          <Header className=\"header\">\r\n            <div className=\"logo\" />\r\n            <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[\"1\"]}>\r\n              <Menu.Item key=\"1\">\r\n                <NavLink to=\"/\">首页</NavLink>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"2\">\r\n                <NavLink to=\"/frontend\">前端</NavLink>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"3\">\r\n                <NavLink to=\"backend\">后端</NavLink>\r\n              </Menu.Item>\r\n            </Menu>\r\n          </Header>\r\n          <Layout>\r\n            <Sider\r\n              breakpoint=\"lg\"\r\n              collapsedWidth=\"0\"\r\n              width={200}\r\n              className=\"site-layout-background\"\r\n            >\r\n              <Menu\r\n                mode=\"inline\"\r\n                defaultSelectedKeys={[\"1\"]}\r\n                defaultOpenKeys={[\"sub1\"]}\r\n                style={{ height: \"100%\", borderRight: 0 }}\r\n              >\r\n                <SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"subnav 1\">\r\n                  <Menu.Item key=\"1\">option1</Menu.Item>\r\n                  <Menu.Item key=\"2\">option2</Menu.Item>\r\n                  <Menu.Item key=\"3\">option3</Menu.Item>\r\n                  <Menu.Item key=\"4\">option4</Menu.Item>\r\n                </SubMenu>\r\n                <SubMenu key=\"sub2\" icon={<LaptopOutlined />} title=\"subnav 2\">\r\n                  <Menu.Item key=\"5\">option5</Menu.Item>\r\n                  <Menu.Item key=\"6\">option6</Menu.Item>\r\n                  <Menu.Item key=\"7\">option7</Menu.Item>\r\n                  <Menu.Item key=\"8\">option8</Menu.Item>\r\n                </SubMenu>\r\n                <SubMenu\r\n                  key=\"sub3\"\r\n                  icon={<NotificationOutlined />}\r\n                  title=\"subnav 3\"\r\n                >\r\n                  <Menu.Item key=\"9\">option9</Menu.Item>\r\n                  <Menu.Item key=\"10\">option10</Menu.Item>\r\n                  <Menu.Item key=\"11\">option11</Menu.Item>\r\n                  <Menu.Item key=\"12\">option12</Menu.Item>\r\n                </SubMenu>\r\n              </Menu>\r\n            </Sider>\r\n            <Layout style={{ padding: \"0 24px 24px\" }}>\r\n              <Breadcrumb style={{ margin: \"16px 0\" }}>\r\n                <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                <Breadcrumb.Item>List</Breadcrumb.Item>\r\n                <Breadcrumb.Item>App</Breadcrumb.Item>\r\n              </Breadcrumb>\r\n              <Content\r\n                className=\"site-layout-background\"\r\n                style={{\r\n                  padding: 24,\r\n                  margin: 0,\r\n                  minHeight: 500,\r\n                }}\r\n              >\r\n                <Route path=\"/\" component={Home} exact />\r\n                <Route path=\"/frontend\" component={Frontend} exact />\r\n                <Route path=\"/backend\" component={Backend} exact />\r\n                <Redirect to=\"/\" />\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        </Layout>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\nimport Router from \"./containers/Main\";\nimport \"antd/dist/antd.css\"; // or 'antd/dist/antd.less'\n\nfunction App() {\n  return <Router />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}